・Strus
画面遷移の管理をActionクラスとxmlで行っていたり、入力チェック昨日をが提供されていることが特徴として挙げられる。また、独自のカスタムタグが利用できる。
Strus2に移行した際に、アノテーションによる設定ファイルの削減、DIコンテナ機能の外部ファイルでクラスの依存関係を設定できるような機能が加えられた。
しかし、脆弱性が発見されてから他のフレームワークに移行するユーザが増えている。

・Java Server Faces(JSF)
コンポーネントベースフレームワークという、表示する画面に対応するサーバサイドのクラスによって処理が行われる手法を取り入れている。また、JSFのView部にはXHTMLが採用されているので、デザインの確認がしやすいという特徴も持つ。

・Spring Framework
DIコンテナという環境依存する機能を外部から提供する手法を取り入れたフレームワーク。Webアプリケーションだけでなく機能するので、汎用性の高いフレームワークである。また、様々なモジュールを提供している。

・Play Framework
JavaだけでなくScalaとも相性がいいフレームワーク。servletやJSPを用いずにアプリケーションを構築できる特徴を持つ。
軽量さと高い生産性を持つため、他のフレームワークよりマシンの負担が少ない。

・Java EE
大規模システム向けのフレームワークで、Java標準仕様のフレームワーク。安定性のあるフレームワークで、多くの機能がまとめて提供されているので、使い勝手がいいという特徴を持つ。
近年Jakarta EEに名称が変更となる。
